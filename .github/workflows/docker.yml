---
name: Build and push containers

on:
  push:
    # only pushes on default master so we don't push intermediate results to dockerhub
    branches:
    - pr-push
  pull_request:

jobs:
  sidecar-images:
    name: Build and push independent images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image:
        - d4science-storage
        - oneclient-sidecar
        - single-user-eiscat
        - webdav-sidecar

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta commit
        id: docker_meta_commit
        uses: docker/metadata-action@v4
        with:
          images: valtri/${{ matrix.image }}
          tags: |
            type=ref,event=tag
            type=sha
            latest
      - name: Docker meta pull-request
        id: docker_meta_pr
        uses: docker/metadata-action@v4
        with:
          images: valtri/${{ matrix.image }}
          tags: |
            type=ref,event=pr
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push from commit
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.image }}
          push: true
          tags: ${{ steps.docker_meta_commit.outputs.tags }}
          labels: ${{ steps.docker_meta_commit.outputs.labels }}
        if: ${{ github.event_name != 'pull_request' }}
      - name: Build and push from pull-request
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.image }}
          push: true
          tags: ${{ steps.docker_meta_pr.outputs.tags }}
          labels: ${{ steps.docker_meta_pr.outputs.labels }}
        if: ${{ github.event_name == 'pull_request' }}

  base-image:
    name: Build base image
    runs-on: ubuntu-latest
    outputs:
      base: ${{ steps.docker_meta_base.outputs.tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: docker_meta_base
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository_owner }}/notebooks-base
          tags: |
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build base
        uses: docker/build-push-action@v3
        with:
          context: base
          tags: ${{ steps.docker_meta_base.outputs.tags }}
          labels: ${{ steps.docker_meta_base.outputs.labels }}
          outputs: type=docker,dest=/tmp/base.tar
      - name: Upload docker image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: images
          path: /tmp/base.tar

  user-images:
    name: Build and push images
    runs-on: ubuntu-latest
    needs: base-image

    strategy:
      matrix:
        image:
        - single-user
        # - single-user-d4science
        # # - single-user-seaclearly
        # - single-user-xaiss
        # - single-user-panosc
        # - single-user-sobigdata
        # - single-user-r-d4science
        # - single-user-ai4pp

    steps:
      - name: try to make free space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: valtri/${{ matrix.image }}
          tags: |
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Get previous build base
        uses: actions/download-artifact@v3
        with:
          name: images
          path: /tmp
      - name: Load Docker images
        run: |
          docker load --input /tmp/base.tar
          # we are so scarce on storage that this needs to be cleared
          rm -rf /tmp/base.tar
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Unfortunately I haven't been able to load an prebuilt image here
      # so not using the build-push-action from docker
      # it's missing the labels and assumes tags is just one
      - name: Build full image
        run: |
          docker build \
            --build-arg BASE_IMAGE=${{ needs.base-image.outputs.base }} \
            --tag ${{ steps.docker_meta.outputs.tags }} \
            --tag valtri/${{ matrix.image }}:latest \
            ${{ matrix.image }}
      - name: Push full image
        run: |
          docker push ${{ steps.docker_meta.outputs.tags }}
      - name: Push full image latest tag
        run: |
          docker push valtri/${{ matrix.image }}:latest
        if: ${{ github.event_name != 'pull_request' }}
      - uses: addnab/docker-run-action@v3
        with:
          image: ${{ steps.docker_meta.outputs.tags }}
          options: -v ${{ github.workspace }}/${{ matrix.image }}:/image-data
          run: |
            for f in /image-data/tests/*.ipynb; do
              if [ -e "$f" ]; then
                jupyter nbconvert --ExecutePreprocessor.timeout=600 --to rst \
                       --execute --stdout $f || exit 1
              else
                true
              fi
            done
